<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDeniedHandler" class="com.project.webflix.security.CustomAccessDeniedHandler"></bean>
	<!-- ㅇ패스워드 암호화 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService" class="com.project.webflix.security.CustomUserDetailsService"></bean>
	
	<security:http auto-config="true" use-expressions="true">
		<!-- 특정 URL에 접근할 떄 인터셉터를 이용해서 접근을 제한하는 설정
		PATTERN = URI패턴을 의미
		ACCESS의 = 권한 체크
		/sample/member라는 uri는 ROLE_MEMBER라는 권한이 있는 사용자만이 접근 가능
		 -->
		<security:form-login login-page="/customLogin"/>	
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sp/memberList" access="hasRole('ROLE_ADMIN')"/>
		<!-- error page를 지정 "/accessError" 
		
		<security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		 <!-- <security:csrf disabled="true"/> --> 
		<!--<security:form-login/> -->
		<!-- <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/> -->
		<security:logout logout-url="/customLogout" 
			invalidate-session="true" delete-cookies="remember-me,JSESSIONID"/>		
	 <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
